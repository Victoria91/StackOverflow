.question{ data: { author: @question.user == current_user } }
  .votes
    - if can?(:vote_up, @question) 
      = link_to "", vote_up_question_path(@question), method: :post, remote: true, class: 'vote_up_link'
    - else
      .vote_up
    %span= @question.rating
    - if can?(:vote_down, @question) 
      = link_to '', vote_down_question_path(@question), method: :post, remote: true, class: 'vote_down_link'
    - else
      .vote_down
  %h2= @question.title
  %h3= @question.body
.attachments
  = render 'attachments'

- if can?(:update, @question)
  .question_errors
  = simple_nested_form_for @question, remote: true, html: { id: 'edit_question_form' }  do |f| 
    = f.input :title 
    = f.input :body 
    
    %p Attachments:
    = f.simple_fields_for :attachments, @question.attachments.build, wrapper: false do |a|
      = a.input :file
      = a.link_to_remove 'Remove this attachment'
      %p= f.link_to_add 'Add an attachment', :attachments, data: { target: "#tasks" }  

    = f.button :submit 

    = f.button :submit, 'Cancel', class: 'alert', id: 'cancel_question_edit'
  .floatl
    = link_to 'Edit', '', id: 'edit_question_link' 
    = link_to 'Delete', question_path(@question), method: :delete, id: 'delete_question_link', data: { confirm: 'sure?' }

- if can?(:subscribe, @question)
  .floatl= link_to 'Subscribe', subscribe_question_path(@question), method: :post, remote: true, id: 'subscribe_question_link'
- if can?(:unsubscribe, @question)
  .floatl= link_to 'Unsubscribe', unsubscribe_question_path(@question), method: :delete, remote: true, id: 'unsubscribe_question_link'

.answers{ data: { question_id: @question.id } }
  = render 'answers'

- if can?(:create, Answer)
  = simple_form_for [@question, @answer], remote: true, data: { type: :json } do |f|
    = f.input :body, label: 'Your answer:' 
    = f.button :submit 

= subscribe_to "/questions/#{@question.id}/answers"