- @question.answers.all.each do |answer|
  %div{ id: "answer_#{answer.id}"}
    %hr
    .votes
      - if can?(:vote_up, answer) 
        = link_to "", vote_up_answer_votes_path(answer), method: :post, remote: true, class: 'vote_up_link'
      - else
        .vote_up
      .clear{style: 'clear:both'}
      %span= answer.rating
      - if can?(:vote_down, answer) 
        = link_to '', vote_down_answer_votes_path(answer), method: :post, remote: true, class: 'vote_down_link'
      - else
        .vote_down
      .clear{style: 'clear:both'}
      - if can?(:accept, answer)
        = link_to '', accept_answer_path(answer), method: :post, remote: true, class: answer.accepted? ? 'accepted' : 'accept', title: 'click to accept', id: "accept_answer_#{answer.id}"
      - elsif answer.accepted?
        .accepted
    - if can?(:update, answer) 
      %i Your answer
      %br
      .editable_answer{ data: { answer_id: answer.id }, title: 'click to edit' }  
        .answer{ id: "answer_text_#{answer.id}", data: { answer_id: answer.id } }= answer.body
        .floatl
          - if can?(:create, Comment)
            = link_to 'comment ', '', id: "leave_comment_answer_#{answer.id}_link", class: 'show_comment_form', data: { answer_id: answer.id }
          = link_to 'Delete', answer, method: :delete, remote: true, id: "delete_answer_#{answer.id}_link"
        = simple_form_for [answer], remote: true, html: { id: "answer_form_#{answer.id}", class: "editable_answer_form" }, data: { type: :json, answer_id: answer.id } do |f|
          .answer_errors{ id: "answer_errors_#{answer.id}" }
          = f.input :body, label: false
          = f.button :submit, class: 'tiny'
          = f.button :submit, 'Cancel', class: 'alert tiny', data: { answer_id: answer.id }
    - else
      = answer.body
      - if can?(:create, Comment)
        .floatl= link_to 'comment ', '', id: "leave_comment_answer_#{answer.id}_link", class: 'show_comment_form', data: { answer_id: answer.id }
    - if can?(:create, Comment)
      = simple_form_for [answer, answer.comments.build], remote: true, html: { id: "comment_answer_#{answer.id}", class: "comment_form" }, data: { answer_id: answer.id } do |f|
        .answer_errors{ id: "answer_errors_#{answer.id}" }
        = f.input :body, label: false
        = f.button :submit, class: 'tiny'
        = f.button :submit, 'Cancel', class: 'alert tiny', data: { answer_id: answer.id }
    %br
    .comments
      - if answer.comments.exists?
        = render 'comments', parent: answer